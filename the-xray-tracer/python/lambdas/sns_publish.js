"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const AWSXRay = require('aws-xray-sdk');
const AWS = AWSXRay.captureAWS(require('aws-sdk'));
// Set region
AWS.config.update({ region: 'us-east-1' });
exports.handler = async function (event) {
    const segment = AWSXRay.getSegment(); //returns the facade segment
    const snsSegment = segment.addNewSubsegment('SNS Publish Logic');
    console.log("request:", JSON.stringify(event, undefined, 2));
    // Create an SNS service object
    var params = {
        Message: 'Simulated Message',
        TopicArn: process.env.TOPIC_ARN
    };
    var publishResponse = await new AWS.SNS().publish(params).promise();
    snsSegment.addAnnotation("message", params.Message);
    snsSegment.addMetadata("params", params);
    snsSegment.addMetadata("response", publishResponse);
    console.log(publishResponse);
    snsSegment.close();
    // return response back to upstream caller
    return { "status": "success" };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic25zX3B1Ymxpc2guanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzbnNfcHVibGlzaC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLE1BQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUN4QyxNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO0FBQ25ELGFBQWE7QUFDYixHQUFHLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFDLE1BQU0sRUFBRSxXQUFXLEVBQUMsQ0FBQyxDQUFDO0FBRXpDLE9BQU8sQ0FBQyxPQUFPLEdBQUcsS0FBSyxXQUFVLEtBQVM7SUFDeEMsTUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUMsNEJBQTRCO0lBQ2xFLE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0lBQ2pFLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRTdELCtCQUErQjtJQUMvQixJQUFJLE1BQU0sR0FBRztRQUNYLE9BQU8sRUFBRSxtQkFBbUI7UUFDNUIsUUFBUSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUztLQUNoQyxDQUFDO0lBQ0YsSUFBSSxlQUFlLEdBQUcsTUFBTSxJQUFJLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7SUFFcEUsVUFBVSxDQUFDLGFBQWEsQ0FBQyxTQUFTLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3BELFVBQVUsQ0FBQyxXQUFXLENBQUMsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFBO0lBQ3hDLFVBQVUsQ0FBQyxXQUFXLENBQUMsVUFBVSxFQUFFLGVBQWUsQ0FBQyxDQUFBO0lBRW5ELE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLENBQUM7SUFFN0IsVUFBVSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBRW5CLDBDQUEwQztJQUMxQyxPQUFPLEVBQUMsUUFBUSxFQUFFLFNBQVMsRUFBQyxDQUFDO0FBQy9CLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbmNvbnN0IEFXU1hSYXkgPSByZXF1aXJlKCdhd3MteHJheS1zZGsnKTtcbmNvbnN0IEFXUyA9IEFXU1hSYXkuY2FwdHVyZUFXUyhyZXF1aXJlKCdhd3Mtc2RrJykpO1xuLy8gU2V0IHJlZ2lvblxuQVdTLmNvbmZpZy51cGRhdGUoe3JlZ2lvbjogJ3VzLWVhc3QtMSd9KTtcblxuZXhwb3J0cy5oYW5kbGVyID0gYXN5bmMgZnVuY3Rpb24oZXZlbnQ6YW55KSB7XG4gIGNvbnN0IHNlZ21lbnQgPSBBV1NYUmF5LmdldFNlZ21lbnQoKTsgLy9yZXR1cm5zIHRoZSBmYWNhZGUgc2VnbWVudFxuICBjb25zdCBzbnNTZWdtZW50ID0gc2VnbWVudC5hZGROZXdTdWJzZWdtZW50KCdTTlMgUHVibGlzaCBMb2dpYycpO1xuICBjb25zb2xlLmxvZyhcInJlcXVlc3Q6XCIsIEpTT04uc3RyaW5naWZ5KGV2ZW50LCB1bmRlZmluZWQsIDIpKTtcblxuICAvLyBDcmVhdGUgYW4gU05TIHNlcnZpY2Ugb2JqZWN0XG4gIHZhciBwYXJhbXMgPSB7XG4gICAgTWVzc2FnZTogJ1NpbXVsYXRlZCBNZXNzYWdlJywgXG4gICAgVG9waWNBcm46IHByb2Nlc3MuZW52LlRPUElDX0FSTlxuICB9O1xuICB2YXIgcHVibGlzaFJlc3BvbnNlID0gYXdhaXQgbmV3IEFXUy5TTlMoKS5wdWJsaXNoKHBhcmFtcykucHJvbWlzZSgpO1xuXG4gIHNuc1NlZ21lbnQuYWRkQW5ub3RhdGlvbihcIm1lc3NhZ2VcIiwgcGFyYW1zLk1lc3NhZ2UpO1xuICBzbnNTZWdtZW50LmFkZE1ldGFkYXRhKFwicGFyYW1zXCIsIHBhcmFtcylcbiAgc25zU2VnbWVudC5hZGRNZXRhZGF0YShcInJlc3BvbnNlXCIsIHB1Ymxpc2hSZXNwb25zZSlcblxuICBjb25zb2xlLmxvZyhwdWJsaXNoUmVzcG9uc2UpO1xuIFxuICBzbnNTZWdtZW50LmNsb3NlKCk7XG4gIFxuICAvLyByZXR1cm4gcmVzcG9uc2UgYmFjayB0byB1cHN0cmVhbSBjYWxsZXJcbiAgcmV0dXJuIHtcInN0YXR1c1wiOiBcInN1Y2Nlc3NcIn07XG59O1xuIl19