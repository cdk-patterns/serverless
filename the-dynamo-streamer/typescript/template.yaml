Resources:
  TheDynamoStreamer641C5E5B:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: message
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: message
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: TheDynamoStreamerStack/TheDynamoStreamer/Resource
  dynamoStreamSubscriberLambdaHandlerServiceRole70DB8A47:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: TheDynamoStreamerStack/dynamoStreamSubscriberLambdaHandler/ServiceRole/Resource
  dynamoStreamSubscriberLambdaHandlerServiceRoleDefaultPolicy47FBFBB9:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: dynamodb:ListStreams
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - TheDynamoStreamer641C5E5B
                      - Arn
                  - /stream/*
          - Action:
              - dynamodb:DescribeStream
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - TheDynamoStreamer641C5E5B
                - StreamArn
        Version: "2012-10-17"
      PolicyName: dynamoStreamSubscriberLambdaHandlerServiceRoleDefaultPolicy47FBFBB9
      Roles:
        - Ref: dynamoStreamSubscriberLambdaHandlerServiceRole70DB8A47
    Metadata:
      aws:cdk:path: TheDynamoStreamerStack/dynamoStreamSubscriberLambdaHandler/ServiceRole/DefaultPolicy/Resource
  dynamoStreamSubscriberLambdaHandlerD2AAE139:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters3b0697f3ade2cacc03d7bda11c3a7396cb61ca984a7d2ab4e5eaf0f7a99a3ce8S3Bucket1EFE0B36
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters3b0697f3ade2cacc03d7bda11c3a7396cb61ca984a7d2ab4e5eaf0f7a99a3ce8S3VersionKey947CC39A
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters3b0697f3ade2cacc03d7bda11c3a7396cb61ca984a7d2ab4e5eaf0f7a99a3ce8S3VersionKey947CC39A
      Handler: lambda.handler
      Role:
        Fn::GetAtt:
          - dynamoStreamSubscriberLambdaHandlerServiceRole70DB8A47
          - Arn
      Runtime: nodejs12.x
    DependsOn:
      - dynamoStreamSubscriberLambdaHandlerServiceRoleDefaultPolicy47FBFBB9
      - dynamoStreamSubscriberLambdaHandlerServiceRole70DB8A47
    Metadata:
      aws:cdk:path: TheDynamoStreamerStack/dynamoStreamSubscriberLambdaHandler/Resource
      aws:asset:property: Code
  dynamoStreamSubscriberLambdaHandlerDynamoDBEventSourceTheDynamoStreamerStackTheDynamoStreamerB472C427C1D10245:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn:
        Fn::GetAtt:
          - TheDynamoStreamer641C5E5B
          - StreamArn
      FunctionName:
        Ref: dynamoStreamSubscriberLambdaHandlerD2AAE139
      BatchSize: 100
      StartingPosition: LATEST
    Metadata:
      aws:cdk:path: TheDynamoStreamerStack/dynamoStreamSubscriberLambdaHandler/DynamoDBEventSource:TheDynamoStreamerStackTheDynamoStreamerB472C427/Resource
  DynamoStreamerAPICA573C81:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: DynamoStreamerAPI
    Metadata:
      aws:cdk:path: TheDynamoStreamerStack/DynamoStreamerAPI/Resource
  DynamoStreamerAPIDeployment8F20C3E3c43ced9cf1abdfd6c637a3a3c2b7d137:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: DynamoStreamerAPICA573C81
      Description: Automatically created by the RestApi construct
    DependsOn:
      - DynamoStreamerAPIInsertItemPOSTCDE209E1
      - DynamoStreamerAPIInsertItemACBD0A97
      - DynamoStreamerAPIErrorResponseModelEB962BDA
      - DynamoStreamerAPIResponseModel5C9A2FF6
    Metadata:
      aws:cdk:path: TheDynamoStreamerStack/DynamoStreamerAPI/Deployment/Resource
  DynamoStreamerAPIDeploymentStageprod0700648B:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: DynamoStreamerAPICA573C81
      DeploymentId:
        Ref: DynamoStreamerAPIDeployment8F20C3E3c43ced9cf1abdfd6c637a3a3c2b7d137
      MethodSettings:
        - DataTraceEnabled: true
          HttpMethod: "*"
          LoggingLevel: INFO
          MetricsEnabled: true
          ResourcePath: /*
      StageName: prod
    Metadata:
      aws:cdk:path: TheDynamoStreamerStack/DynamoStreamerAPI/DeploymentStage.prod/Resource
  DynamoStreamerAPICloudWatchRoleEF2543E3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: TheDynamoStreamerStack/DynamoStreamerAPI/CloudWatchRole/Resource
  DynamoStreamerAPIAccount4440C728:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - DynamoStreamerAPICloudWatchRoleEF2543E3
          - Arn
    DependsOn:
      - DynamoStreamerAPICA573C81
    Metadata:
      aws:cdk:path: TheDynamoStreamerStack/DynamoStreamerAPI/Account
  DynamoStreamerAPIInsertItemACBD0A97:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - DynamoStreamerAPICA573C81
          - RootResourceId
      PathPart: InsertItem
      RestApiId:
        Ref: DynamoStreamerAPICA573C81
    Metadata:
      aws:cdk:path: TheDynamoStreamerStack/DynamoStreamerAPI/Default/InsertItem/Resource
  DynamoStreamerAPIInsertItemPOSTCDE209E1:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: DynamoStreamerAPIInsertItemACBD0A97
      RestApiId:
        Ref: DynamoStreamerAPICA573C81
      AuthorizationType: NONE
      Integration:
        Credentials:
          Fn::GetAtt:
            - DefaultLambdaHanderRoleA44A3BA8
            - Arn
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseTemplates:
              application/json: '{"message":"item added to db"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: ^[BadRequest].*
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json:
            Fn::Join:
              - ""
              - - '{"TableName":"'
                - Ref: TheDynamoStreamer641C5E5B
                - "\",\"Item\":{\"message\":{\"S\":\"$input.path('$.message')\"}}}"
        Type: AWS
        Uri: arn:aws:apigateway:us-east-1:dynamodb:action/PutItem
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: DynamoStreamerAPIResponseModel5C9A2FF6
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: DynamoStreamerAPIErrorResponseModelEB962BDA
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "400"
    Metadata:
      aws:cdk:path: TheDynamoStreamerStack/DynamoStreamerAPI/Default/InsertItem/POST/Resource
  DynamoStreamerAPIResponseModel5C9A2FF6:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: DynamoStreamerAPICA573C81
      ContentType: application/json
      Name: ResponseModel
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: pollResponse
        type: object
        properties:
          message:
            type: string
    Metadata:
      aws:cdk:path: TheDynamoStreamerStack/DynamoStreamerAPI/ResponseModel/Resource
  DynamoStreamerAPIErrorResponseModelEB962BDA:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: DynamoStreamerAPICA573C81
      ContentType: application/json
      Name: ErrorResponseModel
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: errorResponse
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: TheDynamoStreamerStack/DynamoStreamerAPI/ErrorResponseModel/Resource
  DefaultLambdaHanderRoleA44A3BA8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: TheDynamoStreamerStack/DefaultLambdaHanderRole/Resource
  DefaultLambdaHanderRoleDefaultPolicy40E2D129:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - TheDynamoStreamer641C5E5B
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: DefaultLambdaHanderRoleDefaultPolicy40E2D129
      Roles:
        - Ref: DefaultLambdaHanderRoleA44A3BA8
    Metadata:
      aws:cdk:path: TheDynamoStreamerStack/DefaultLambdaHanderRole/DefaultPolicy/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.23.0,@aws-cdk/assets=1.22.0,@aws-cdk/aws-apigateway=1.22.0,@aws-cdk/aws-applicationautoscaling=1.22.0,@aws-cdk/aws-autoscaling-common=1.22.0,@aws-cdk/aws-cloudwatch=1.22.0,@aws-cdk/aws-dynamodb=1.22.0,@aws-cdk/aws-ec2=1.22.0,@aws-cdk/aws-events=1.22.0,@aws-cdk/aws-iam=1.22.0,@aws-cdk/aws-kms=1.22.0,@aws-cdk/aws-lambda=1.22.0,@aws-cdk/aws-lambda-event-sources=1.22.0,@aws-cdk/aws-logs=1.22.0,@aws-cdk/aws-s3=1.22.0,@aws-cdk/aws-s3-assets=1.22.0,@aws-cdk/aws-s3-notifications=1.22.0,@aws-cdk/aws-sns=1.22.0,@aws-cdk/aws-sns-subscriptions=1.22.0,@aws-cdk/aws-sqs=1.22.0,@aws-cdk/aws-ssm=1.22.0,@aws-cdk/core=1.22.0,@aws-cdk/cx-api=1.22.0,@aws-cdk/region-info=1.22.0,jsii-runtime=node.js/v13.6.0
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameters3b0697f3ade2cacc03d7bda11c3a7396cb61ca984a7d2ab4e5eaf0f7a99a3ce8S3Bucket1EFE0B36:
    Type: String
    Description: S3 bucket for asset "3b0697f3ade2cacc03d7bda11c3a7396cb61ca984a7d2ab4e5eaf0f7a99a3ce8"
  AssetParameters3b0697f3ade2cacc03d7bda11c3a7396cb61ca984a7d2ab4e5eaf0f7a99a3ce8S3VersionKey947CC39A:
    Type: String
    Description: S3 key for asset version "3b0697f3ade2cacc03d7bda11c3a7396cb61ca984a7d2ab4e5eaf0f7a99a3ce8"
  AssetParameters3b0697f3ade2cacc03d7bda11c3a7396cb61ca984a7d2ab4e5eaf0f7a99a3ce8ArtifactHashF084AA41:
    Type: String
    Description: Artifact hash for asset "3b0697f3ade2cacc03d7bda11c3a7396cb61ca984a7d2ab4e5eaf0f7a99a3ce8"
Outputs:
  DynamoStreamerAPIEndpointA76F4941:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: DynamoStreamerAPICA573C81
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: DynamoStreamerAPIDeploymentStageprod0700648B
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

