Resources:
  DestinedEventBus14820B65:
    Type: AWS::Events::EventBus
    Properties:
      Name: the-destined-lambda
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/DestinedEventBus/Resource
  theDestinedLambdaTopic8F2C8FB6:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: The Destined Lambda CDK Pattern Topic
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/theDestinedLambdaTopic/Resource
  destinedLambdaServiceRole87608B6F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/destinedLambda/ServiceRole/Resource
  destinedLambdaServiceRoleDefaultPolicy9D15647D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: events:PutEvents
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: destinedLambdaServiceRoleDefaultPolicy9D15647D
      Roles:
        - Ref: destinedLambdaServiceRole87608B6F
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/destinedLambda/ServiceRole/DefaultPolicy/Resource
  destinedLambda8DF776BB:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersb56bdb1406ccceaf02f732778b7db4c9eb466c9669206ce351305cae14ad6c41S3BucketDBDC93F6
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb56bdb1406ccceaf02f732778b7db4c9eb466c9669206ce351305cae14ad6c41S3VersionKeyB882E4CD
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb56bdb1406ccceaf02f732778b7db4c9eb466c9669206ce351305cae14ad6c41S3VersionKeyB882E4CD
      Handler: destinedLambda.handler
      Role:
        Fn::GetAtt:
          - destinedLambdaServiceRole87608B6F
          - Arn
      Runtime: nodejs12.x
    DependsOn:
      - destinedLambdaServiceRoleDefaultPolicy9D15647D
      - destinedLambdaServiceRole87608B6F
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/destinedLambda/Resource
      aws:asset:path: asset.b56bdb1406ccceaf02f732778b7db4c9eb466c9669206ce351305cae14ad6c41
      aws:asset:property: Code
  destinedLambdaEventInvokeConfig3CA2AF7E:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: destinedLambda8DF776BB
      Qualifier: $LATEST
      DestinationConfig:
        OnFailure:
          Destination:
            Fn::GetAtt:
              - DestinedEventBus14820B65
              - Arn
        OnSuccess:
          Destination:
            Fn::GetAtt:
              - DestinedEventBus14820B65
              - Arn
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/destinedLambda/EventInvokeConfig/Resource
  destinedLambdaAllowInvokeTheDestinedLambdaStacktheDestinedLambdaTopic8CE84AB4D93BC799:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - destinedLambda8DF776BB
          - Arn
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: theDestinedLambdaTopic8F2C8FB6
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/destinedLambda/AllowInvoke:TheDestinedLambdaStacktheDestinedLambdaTopic8CE84AB4
  destinedLambdatheDestinedLambdaTopic8E937C7F:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: lambda
      TopicArn:
        Ref: theDestinedLambdaTopic8F2C8FB6
      Endpoint:
        Fn::GetAtt:
          - destinedLambda8DF776BB
          - Arn
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/destinedLambda/theDestinedLambdaTopic/Resource
  SuccessLambdaHandlerServiceRole77BD70C4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/SuccessLambdaHandler/ServiceRole/Resource
  SuccessLambdaHandler0E2CD797:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersb56bdb1406ccceaf02f732778b7db4c9eb466c9669206ce351305cae14ad6c41S3BucketDBDC93F6
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb56bdb1406ccceaf02f732778b7db4c9eb466c9669206ce351305cae14ad6c41S3VersionKeyB882E4CD
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb56bdb1406ccceaf02f732778b7db4c9eb466c9669206ce351305cae14ad6c41S3VersionKeyB882E4CD
      Handler: success.handler
      Role:
        Fn::GetAtt:
          - SuccessLambdaHandlerServiceRole77BD70C4
          - Arn
      Runtime: nodejs12.x
      Timeout: 3
    DependsOn:
      - SuccessLambdaHandlerServiceRole77BD70C4
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/SuccessLambdaHandler/Resource
      aws:asset:path: asset.b56bdb1406ccceaf02f732778b7db4c9eb466c9669206ce351305cae14ad6c41
      aws:asset:property: Code
  SuccessLambdaHandlerAllowEventRuleTheDestinedLambdaStacksuccessRuleDD139E311BCFEC18:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SuccessLambdaHandler0E2CD797
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - successRuleE9E88056
          - Arn
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/SuccessLambdaHandler/AllowEventRuleTheDestinedLambdaStacksuccessRuleDD139E31
  successRuleE9E88056:
    Type: AWS::Events::Rule
    Properties:
      Description: all success events are caught here and logged centrally
      EventBusName:
        Ref: DestinedEventBus14820B65
      EventPattern:
        detail:
          requestContext:
            condition:
              - Success
          responsePayload:
            source:
              - cdkpatterns.the-destined-lambda
            action:
              - message
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - SuccessLambdaHandler0E2CD797
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/successRule/Resource
  FailureLambdaHandlerServiceRole7E0414CB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/FailureLambdaHandler/ServiceRole/Resource
  FailureLambdaHandlerBB58C051:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersb56bdb1406ccceaf02f732778b7db4c9eb466c9669206ce351305cae14ad6c41S3BucketDBDC93F6
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb56bdb1406ccceaf02f732778b7db4c9eb466c9669206ce351305cae14ad6c41S3VersionKeyB882E4CD
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb56bdb1406ccceaf02f732778b7db4c9eb466c9669206ce351305cae14ad6c41S3VersionKeyB882E4CD
      Handler: failure.handler
      Role:
        Fn::GetAtt:
          - FailureLambdaHandlerServiceRole7E0414CB
          - Arn
      Runtime: nodejs12.x
      Timeout: 3
    DependsOn:
      - FailureLambdaHandlerServiceRole7E0414CB
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/FailureLambdaHandler/Resource
      aws:asset:path: asset.b56bdb1406ccceaf02f732778b7db4c9eb466c9669206ce351305cae14ad6c41
      aws:asset:property: Code
  FailureLambdaHandlerAllowEventRuleTheDestinedLambdaStackfailureRule3938061079B1A951:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - FailureLambdaHandlerBB58C051
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - failureRule10D0B2E4
          - Arn
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/FailureLambdaHandler/AllowEventRuleTheDestinedLambdaStackfailureRule39380610
  failureRule10D0B2E4:
    Type: AWS::Events::Rule
    Properties:
      Description: all failure events are caught here and logged centrally
      EventBusName:
        Ref: DestinedEventBus14820B65
      EventPattern:
        detail:
          responsePayload:
            errorType:
              - Error
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - FailureLambdaHandlerBB58C051
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/failureRule/Resource
  theDestinedLambdaAPIBAB2789B:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: theDestinedLambdaAPI
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/theDestinedLambdaAPI/Resource
  theDestinedLambdaAPIDeploymentC364859E4d00c40dc3626f263148f0665ac718ce:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: theDestinedLambdaAPIBAB2789B
      Description: Automatically created by the RestApi construct
    DependsOn:
      - theDestinedLambdaAPISendEventGETC3F11CCE
      - theDestinedLambdaAPISendEventC20585CF
      - theDestinedLambdaAPIErrorResponseModel5F76D2FC
      - theDestinedLambdaAPIResponseModel7D59062C
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/theDestinedLambdaAPI/Deployment/Resource
  theDestinedLambdaAPIDeploymentStageprodD67BDFB2:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: theDestinedLambdaAPIBAB2789B
      DeploymentId:
        Ref: theDestinedLambdaAPIDeploymentC364859E4d00c40dc3626f263148f0665ac718ce
      MethodSettings:
        - DataTraceEnabled: true
          HttpMethod: "*"
          LoggingLevel: INFO
          MetricsEnabled: true
          ResourcePath: /*
      StageName: prod
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/theDestinedLambdaAPI/DeploymentStage.prod/Resource
  theDestinedLambdaAPICloudWatchRoleCDF408DA:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/theDestinedLambdaAPI/CloudWatchRole/Resource
  theDestinedLambdaAPIAccount1A39207B:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - theDestinedLambdaAPICloudWatchRoleCDF408DA
          - Arn
    DependsOn:
      - theDestinedLambdaAPIBAB2789B
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/theDestinedLambdaAPI/Account
  theDestinedLambdaAPISendEventC20585CF:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - theDestinedLambdaAPIBAB2789B
          - RootResourceId
      PathPart: SendEvent
      RestApiId:
        Ref: theDestinedLambdaAPIBAB2789B
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/theDestinedLambdaAPI/Default/SendEvent/Resource
  theDestinedLambdaAPISendEventGETC3F11CCE:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: theDestinedLambdaAPISendEventC20585CF
      RestApiId:
        Ref: theDestinedLambdaAPIBAB2789B
      AuthorizationType: NONE
      Integration:
        Credentials:
          Fn::GetAtt:
            - DefaultLambdaHanderRoleA44A3BA8
            - Arn
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseTemplates:
              application/json: '{"message":"Message added to SNS topic"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: ^[Error].*
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
        RequestTemplates:
          application/json:
            Fn::Join:
              - ""
              - - Action=Publish&TargetArn=$util.urlEncode('
                - Ref: theDestinedLambdaTopic8F2C8FB6
                - "')&Message=please $input.params().querystring.get('mode')&Version=2010-03-31"
        Type: AWS
        Uri: arn:aws:apigateway:us-east-1:sns:path//
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: theDestinedLambdaAPIResponseModel7D59062C
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: theDestinedLambdaAPIErrorResponseModel5F76D2FC
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "400"
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/theDestinedLambdaAPI/Default/SendEvent/GET/Resource
  theDestinedLambdaAPIResponseModel7D59062C:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: theDestinedLambdaAPIBAB2789B
      ContentType: application/json
      Name: ResponseModel
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: pollResponse
        type: object
        properties:
          message:
            type: string
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/theDestinedLambdaAPI/ResponseModel/Resource
  theDestinedLambdaAPIErrorResponseModel5F76D2FC:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: theDestinedLambdaAPIBAB2789B
      ContentType: application/json
      Name: ErrorResponseModel
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: errorResponse
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/theDestinedLambdaAPI/ErrorResponseModel/Resource
  DefaultLambdaHanderRoleA44A3BA8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/DefaultLambdaHanderRole/Resource
  DefaultLambdaHanderRoleDefaultPolicy40E2D129:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: theDestinedLambdaTopic8F2C8FB6
        Version: "2012-10-17"
      PolicyName: DefaultLambdaHanderRoleDefaultPolicy40E2D129
      Roles:
        - Ref: DefaultLambdaHanderRoleA44A3BA8
    Metadata:
      aws:cdk:path: TheDestinedLambdaStack/DefaultLambdaHanderRole/DefaultPolicy/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.30.0,@aws-cdk/assets=1.30.0,@aws-cdk/aws-apigateway=1.30.0,@aws-cdk/aws-applicationautoscaling=1.30.0,@aws-cdk/aws-autoscaling=1.30.0,@aws-cdk/aws-autoscaling-common=1.30.0,@aws-cdk/aws-autoscaling-hooktargets=1.30.0,@aws-cdk/aws-cloudwatch=1.30.0,@aws-cdk/aws-ec2=1.30.0,@aws-cdk/aws-ecr=1.30.0,@aws-cdk/aws-ecr-assets=1.30.0,@aws-cdk/aws-ecs=1.30.0,@aws-cdk/aws-elasticloadbalancingv2=1.30.0,@aws-cdk/aws-events=1.30.0,@aws-cdk/aws-events-targets=1.30.0,@aws-cdk/aws-iam=1.30.0,@aws-cdk/aws-kms=1.30.0,@aws-cdk/aws-lambda=1.30.0,@aws-cdk/aws-lambda-destinations=1.30.0,@aws-cdk/aws-logs=1.30.0,@aws-cdk/aws-s3=1.30.0,@aws-cdk/aws-s3-assets=1.30.0,@aws-cdk/aws-servicediscovery=1.30.0,@aws-cdk/aws-sns=1.30.0,@aws-cdk/aws-sns-subscriptions=1.30.0,@aws-cdk/aws-sqs=1.30.0,@aws-cdk/aws-ssm=1.30.0,@aws-cdk/core=1.30.0,@aws-cdk/cx-api=1.30.0,@aws-cdk/region-info=1.30.0,jsii-runtime=node.js/v11.10.0
    Condition: CDKMetadataAvailable
Parameters:
  AssetParametersb56bdb1406ccceaf02f732778b7db4c9eb466c9669206ce351305cae14ad6c41S3BucketDBDC93F6:
    Type: String
    Description: S3 bucket for asset "b56bdb1406ccceaf02f732778b7db4c9eb466c9669206ce351305cae14ad6c41"
  AssetParametersb56bdb1406ccceaf02f732778b7db4c9eb466c9669206ce351305cae14ad6c41S3VersionKeyB882E4CD:
    Type: String
    Description: S3 key for asset version "b56bdb1406ccceaf02f732778b7db4c9eb466c9669206ce351305cae14ad6c41"
  AssetParametersb56bdb1406ccceaf02f732778b7db4c9eb466c9669206ce351305cae14ad6c41ArtifactHashB8500E6B:
    Type: String
    Description: Artifact hash for asset "b56bdb1406ccceaf02f732778b7db4c9eb466c9669206ce351305cae14ad6c41"
Outputs:
  theDestinedLambdaAPIEndpointA1D03662:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: theDestinedLambdaAPIBAB2789B
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: theDestinedLambdaAPIDeploymentStageprodD67BDFB2
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

