Resources:
  UserPoolsmsRole4EA729DD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: thesimplegraphqlserviceUserPoolF8B729D1
            Effect: Allow
            Principal:
              Service: cognito-idp.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action: sns:Publish
                Effect: Allow
                Resource: "*"
            Version: "2012-10-17"
          PolicyName: sns-publish
    Metadata:
      aws:cdk:path: the-simple-graphql-service/UserPool/smsRole/Resource
  UserPool6BA7E5F2:
    Type: AWS::Cognito::UserPool
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      EmailVerificationMessage: Hello {username}, Your verification code is {####}
      EmailVerificationSubject: Verify your new account
      LambdaConfig: {}
      SmsConfiguration:
        ExternalId: thesimplegraphqlserviceUserPoolF8B729D1
        SnsCallerArn:
          Fn::GetAtt:
            - UserPoolsmsRole4EA729DD
            - Arn
      SmsVerificationMessage: The verification code to your new account is {####}
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: Hello {username}, Your verification code is {####}
        EmailSubject: Verify your new account
        SmsMessage: The verification code to your new account is {####}
    Metadata:
      aws:cdk:path: the-simple-graphql-service/UserPool/Resource
  ApiApiLogsRole90293F72:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: the-simple-graphql-service/Api/ApiLogsRole/Resource
  ApiF70053CD:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      AuthenticationType: API_KEY
      Name: demoapi
      LogConfig:
        CloudWatchLogsRoleArn:
          Fn::GetAtt:
            - ApiApiLogsRole90293F72
            - Arn
        FieldLogLevel: ALL
    Metadata:
      aws:cdk:path: the-simple-graphql-service/Api/Resource
  ApiSchema510EECD7:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
          - ApiF70053CD
          - ApiId
      Definition: >-
        type Customer {
            id: String!
            name: String!
        }


        input SaveCustomerInput {
            name: String!
        }


        type Order {
            customer: String!
            order: String!
        }


        type Loyalty {
            level: String
        }


        type Query {
            getCustomers: [Customer]
            getCustomer(id: String): Customer
            getLoyaltyLevel(id: String): Loyalty
        }


        input FirstOrderInput {
            product: String!
            quantity: Int!
        }


        type Mutation {
            addCustomer(customer: SaveCustomerInput!): Customer
            saveCustomer(id: String!, customer: SaveCustomerInput!): Customer
            removeCustomer(id: String!): Customer
            saveCustomerWithFirstOrder(customer: SaveCustomerInput!, order: FirstOrderInput!, referral: String): Order
        }
    Metadata:
      aws:cdk:path: the-simple-graphql-service/Api/Schema
  ApiCustomerDSServiceRoleA929BCF7:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: the-simple-graphql-service/Api/CustomerDS/ServiceRole/Resource
  ApiCustomerDSServiceRoleDefaultPolicy8C927D33:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CustomerTable260DCC08
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: ApiCustomerDSServiceRoleDefaultPolicy8C927D33
      Roles:
        - Ref: ApiCustomerDSServiceRoleA929BCF7
    Metadata:
      aws:cdk:path: the-simple-graphql-service/Api/CustomerDS/ServiceRole/DefaultPolicy/Resource
  ApiCustomerDS8C23CB2D:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - ApiF70053CD
          - ApiId
      Name: Customer
      Type: AMAZON_DYNAMODB
      Description: The customer data source
      DynamoDBConfig:
        AwsRegion:
          Ref: AWS::Region
        TableName:
          Ref: CustomerTable260DCC08
      ServiceRoleArn:
        Fn::GetAtt:
          - ApiCustomerDSServiceRoleA929BCF7
          - Arn
    Metadata:
      aws:cdk:path: the-simple-graphql-service/Api/CustomerDS/Resource
  ApiCustomerDSQuerygetCustomersResolver0F8B3416:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - ApiF70053CD
          - ApiId
      FieldName: getCustomers
      TypeName: Query
      DataSourceName: Customer
      Kind: UNIT
      RequestMappingTemplate: '{"version" : "2017-02-28", "operation" : "Scan"}'
      ResponseMappingTemplate: $util.toJson($ctx.result.items)
    DependsOn:
      - ApiCustomerDS8C23CB2D
      - ApiSchema510EECD7
    Metadata:
      aws:cdk:path: the-simple-graphql-service/Api/CustomerDS/QuerygetCustomersResolver/Resource
  ApiCustomerDSQuerygetCustomerResolver0DC795BE:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - ApiF70053CD
          - ApiId
      FieldName: getCustomer
      TypeName: Query
      DataSourceName: Customer
      Kind: UNIT
      RequestMappingTemplate: '{"version": "2017-02-28", "operation": "GetItem", "key": {"id": $util.dynamodb.toDynamoDBJson($ctx.args.id)}}'
      ResponseMappingTemplate: $util.toJson($ctx.result)
    DependsOn:
      - ApiCustomerDS8C23CB2D
      - ApiSchema510EECD7
    Metadata:
      aws:cdk:path: the-simple-graphql-service/Api/CustomerDS/QuerygetCustomerResolver/Resource
  ApiCustomerDSMutationaddCustomerResolverC9041B1C:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - ApiF70053CD
          - ApiId
      FieldName: addCustomer
      TypeName: Mutation
      DataSourceName: Customer
      Kind: UNIT
      RequestMappingTemplate: >-
        {
                    "version" : "2017-02-28",
                    "operation" : "PutItem",
                    "key" : {
                    "id" : $util.dynamodb.toDynamoDBJson($util.autoId())
                },
                    
                    #set($input = $ctx.args.customer)
                    
                    "attributeValues": $util.dynamodb.toMapValuesJson($input)
                }
      ResponseMappingTemplate: $util.toJson($ctx.result)
    DependsOn:
      - ApiCustomerDS8C23CB2D
      - ApiSchema510EECD7
    Metadata:
      aws:cdk:path: the-simple-graphql-service/Api/CustomerDS/MutationaddCustomerResolver/Resource
  ApiCustomerDSMutationsaveCustomerWithFirstOrderResolver8B1277A8:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - ApiF70053CD
          - ApiId
      FieldName: saveCustomerWithFirstOrder
      TypeName: Mutation
      DataSourceName: Customer
      Kind: UNIT
      RequestMappingTemplate: >-
        {
                    "version" : "2017-02-28",
                    "operation" : "PutItem",
                    "key" : {
                    "order" : $util.dynamodb.toDynamoDBJson($util.autoId()),"customer" : $util.dynamodb.toDynamoDBJson($ctx.args.customer.id)
                },
                    
                    #set($input = $ctx.args.order)
                    $util.qr($input.put("referral", "referral"))
                    "attributeValues": $util.dynamodb.toMapValuesJson($input)
                }
      ResponseMappingTemplate: $util.toJson($ctx.result)
    DependsOn:
      - ApiCustomerDS8C23CB2D
      - ApiSchema510EECD7
    Metadata:
      aws:cdk:path: the-simple-graphql-service/Api/CustomerDS/MutationsaveCustomerWithFirstOrderResolver/Resource
  ApiCustomerDSMutationremoveCustomerResolverA0046C60:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - ApiF70053CD
          - ApiId
      FieldName: removeCustomer
      TypeName: Mutation
      DataSourceName: Customer
      Kind: UNIT
      RequestMappingTemplate: '{"version": "2017-02-28", "operation": "DeleteItem", "key": {"id": $util.dynamodb.toDynamoDBJson($ctx.args.id)}}'
      ResponseMappingTemplate: $util.toJson($ctx.result)
    DependsOn:
      - ApiCustomerDS8C23CB2D
      - ApiSchema510EECD7
    Metadata:
      aws:cdk:path: the-simple-graphql-service/Api/CustomerDS/MutationremoveCustomerResolver/Resource
  ApiLoyaltyDSServiceRoleD70C1C8A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: the-simple-graphql-service/Api/LoyaltyDS/ServiceRole/Resource
  ApiLoyaltyDSServiceRoleDefaultPolicy2A4BEF81:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - LoyaltyLambdaHandler5918F0DA
                - Arn
        Version: "2012-10-17"
      PolicyName: ApiLoyaltyDSServiceRoleDefaultPolicy2A4BEF81
      Roles:
        - Ref: ApiLoyaltyDSServiceRoleD70C1C8A
    Metadata:
      aws:cdk:path: the-simple-graphql-service/Api/LoyaltyDS/ServiceRole/DefaultPolicy/Resource
  ApiLoyaltyDSF9CE5998:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - ApiF70053CD
          - ApiId
      Name: Loyalty
      Type: AWS_LAMBDA
      Description: The loyalty data source
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
            - LoyaltyLambdaHandler5918F0DA
            - Arn
      ServiceRoleArn:
        Fn::GetAtt:
          - ApiLoyaltyDSServiceRoleD70C1C8A
          - Arn
    Metadata:
      aws:cdk:path: the-simple-graphql-service/Api/LoyaltyDS/Resource
  ApiLoyaltyDSQuerygetLoyaltyLevelResolverB3684D7D:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - ApiF70053CD
          - ApiId
      FieldName: getLoyaltyLevel
      TypeName: Query
      DataSourceName: Loyalty
      Kind: UNIT
      RequestMappingTemplate: '{"version": "2017-02-28", "operation": "Invoke", "payload": $util.toJson($ctx)}'
      ResponseMappingTemplate: $util.toJson($ctx.result)
    DependsOn:
      - ApiLoyaltyDSF9CE5998
      - ApiSchema510EECD7
    Metadata:
      aws:cdk:path: the-simple-graphql-service/Api/LoyaltyDS/QuerygetLoyaltyLevelResolver/Resource
  CustomerTable260DCC08:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: the-simple-graphql-service/CustomerTable/Resource
  LoyaltyLambdaHandlerServiceRole62E814E8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: the-simple-graphql-service/LoyaltyLambdaHandler/ServiceRole/Resource
  LoyaltyLambdaHandler5918F0DA:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters5ac33c7ef986ff9cae97da4e4d16879d9688ebb02c6016c10482ea5423f90ba7S3Bucket75416EE3
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters5ac33c7ef986ff9cae97da4e4d16879d9688ebb02c6016c10482ea5423f90ba7S3VersionKey10097FD3
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters5ac33c7ef986ff9cae97da4e4d16879d9688ebb02c6016c10482ea5423f90ba7S3VersionKey10097FD3
      Handler: loyalty.handler
      Role:
        Fn::GetAtt:
          - LoyaltyLambdaHandlerServiceRole62E814E8
          - Arn
      Runtime: nodejs12.x
    DependsOn:
      - LoyaltyLambdaHandlerServiceRole62E814E8
    Metadata:
      aws:cdk:path: the-simple-graphql-service/LoyaltyLambdaHandler/Resource
      aws:asset:path: /git/serverless/the-simple-graphql-service/python/lambda
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.27.0,@aws-cdk/assets=1.27.0,@aws-cdk/aws-apigateway=1.27.0,@aws-cdk/aws-applicationautoscaling=1.27.0,@aws-cdk/aws-appsync=1.27.0,@aws-cdk/aws-autoscaling=1.27.0,@aws-cdk/aws-autoscaling-common=1.27.0,@aws-cdk/aws-autoscaling-hooktargets=1.27.0,@aws-cdk/aws-certificatemanager=1.27.0,@aws-cdk/aws-cloudformation=1.27.0,@aws-cdk/aws-cloudfront=1.27.0,@aws-cdk/aws-cloudwatch=1.27.0,@aws-cdk/aws-cognito=1.27.0,@aws-cdk/aws-dynamodb=1.27.0,@aws-cdk/aws-ec2=1.27.0,@aws-cdk/aws-ecr=1.27.0,@aws-cdk/aws-ecr-assets=1.27.0,@aws-cdk/aws-ecs=1.27.0,@aws-cdk/aws-elasticloadbalancing=1.27.0,@aws-cdk/aws-elasticloadbalancingv2=1.27.0,@aws-cdk/aws-events=1.27.0,@aws-cdk/aws-glue=1.27.0,@aws-cdk/aws-iam=1.27.0,@aws-cdk/aws-kms=1.27.0,@aws-cdk/aws-lambda=1.27.0,@aws-cdk/aws-logs=1.27.0,@aws-cdk/aws-route53=1.27.0,@aws-cdk/aws-route53-targets=1.27.0,@aws-cdk/aws-s3=1.27.0,@aws-cdk/aws-s3-assets=1.27.0,@aws-cdk/aws-sam=1.27.0,@aws-cdk/aws-secretsmanager=1.27.0,@aws-cdk/aws-servicediscovery=1.27.0,@aws-cdk/aws-sns=1.27.0,@aws-cdk/aws-sns-subscriptions=1.27.0,@aws-cdk/aws-sqs=1.27.0,@aws-cdk/aws-ssm=1.27.0,@aws-cdk/aws-stepfunctions=1.27.0,@aws-cdk/aws-stepfunctions-tasks=1.27.0,@aws-cdk/core=1.27.0,@aws-cdk/custom-resources=1.27.0,@aws-cdk/cx-api=1.27.0,@aws-cdk/region-info=1.27.0,jsii-runtime=Python/3.7.6
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameters5ac33c7ef986ff9cae97da4e4d16879d9688ebb02c6016c10482ea5423f90ba7S3Bucket75416EE3:
    Type: String
    Description: S3 bucket for asset "5ac33c7ef986ff9cae97da4e4d16879d9688ebb02c6016c10482ea5423f90ba7"
  AssetParameters5ac33c7ef986ff9cae97da4e4d16879d9688ebb02c6016c10482ea5423f90ba7S3VersionKey10097FD3:
    Type: String
    Description: S3 key for asset version "5ac33c7ef986ff9cae97da4e4d16879d9688ebb02c6016c10482ea5423f90ba7"
  AssetParameters5ac33c7ef986ff9cae97da4e4d16879d9688ebb02c6016c10482ea5423f90ba7ArtifactHashB0B0618E:
    Type: String
    Description: Artifact hash for asset "5ac33c7ef986ff9cae97da4e4d16879d9688ebb02c6016c10482ea5423f90ba7"
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

