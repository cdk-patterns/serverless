import { Test } from 'nodeunit';
declare const _default: {
    'minimal setup'(test: Test): void;
    'defaultChild is set correctly'(test: Test): void;
    '"name" is defaulted to resource physical name'(test: Test): void;
    'fails in synthesis if there are no methods'(test: Test): void;
    '"addResource" can be used on "IRestApiResource" to form a tree'(test: Test): void;
    '"addResource" allows configuration of proxy paths'(test: Test): void;
    '"addMethod" can be used to add methods to resources'(test: Test): void;
    'resourcePath returns the full path of the resource within the API'(test: Test): void;
    'resource path part validation'(test: Test): void;
    'fails if "deployOptions" is set with "deploy" disabled'(test: Test): void;
    'CloudWatch role is created for API Gateway'(test: Test): void;
    'fromRestApiId'(test: Test): void;
    '"url" and "urlForPath" return the URL endpoints of the deployed API'(test: Test): void;
    '"urlForPath" would not work if there is no deployment'(test: Test): void;
    '"urlForPath" requires that path will begin with "/"'(test: Test): void;
    '"executeApiArn" returns the execute-api ARN for a resource/method'(test: Test): void;
    '"executeApiArn" path must begin with "/"'(test: Test): void;
    '"executeApiArn" will convert ANY to "*"'(test: Test): void;
    '"endpointTypes" can be used to specify endpoint configuration for the api'(test: Test): void;
    '"cloneFrom" can be used to clone an existing API'(test: Test): void;
    'allow taking a dependency on the rest api (includes deployment and stage)'(test: Test): void;
    'defaultIntegration and defaultMethodOptions can be used at any level'(test: Test): void;
    'addModel is supported'(test: Test): void;
    'addRequestValidator is supported'(test: Test): void;
    'creates output with given "exportName"'(test: Test): void;
    'creates output when "exportName" is not specified'(test: Test): void;
};
export = _default;
