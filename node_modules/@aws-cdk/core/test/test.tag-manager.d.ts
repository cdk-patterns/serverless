import { Test } from 'nodeunit';
declare const _default: {
    'TagManagerOptions can set tagPropertyName'(test: Test): void;
    '#setTag() supports setting a tag regardless of Type'(test: Test): void;
    'when a tag does not exist': {
        '#removeTag() does not throw an error'(test: Test): void;
        '#setTag() creates the tag'(test: Test): void;
    };
    'when a tag does exist': {
        '#removeTag() deletes the tag'(test: Test): void;
        '#setTag() overwrites the tag'(test: Test): void;
    };
    'when there are no tags': {
        '#renderTags() returns undefined'(test: Test): void;
        '#hasTags() returns false'(test: Test): void;
    };
    '#renderTags() handles standard, map, keyValue, and ASG tag formats'(test: Test): void;
    'when there are tags it hasTags returns true'(test: Test): void;
    'tags with higher or equal priority always take precedence'(test: Test): void;
    'excludeResourceTypes only tags resources that do not match'(test: Test): void;
    'includeResourceTypes only tags resources that match'(test: Test): void;
};
export = _default;
