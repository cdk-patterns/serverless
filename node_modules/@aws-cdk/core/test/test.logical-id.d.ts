import { Test } from 'nodeunit';
declare const _default: {
    'if the naming scheme uniquifies with a hash we can have the same concatenated identifier'(test: Test): void;
    'special case: if the resource is top-level, a hash is not added'(test: Test): void;
    'Logical IDs can be renamed at the stack level'(test: Test): void;
    'Renames for objects that don\'t exist fail'(test: Test): void;
    'ID Renames that collide with existing IDs should fail'(test: Test): void;
    'hashed naming scheme filters constructs named "Resource" from the human portion'(test: Test): void;
    'can transparently wrap constructs using "Default" id'(test: Test): void;
    'non-alphanumeric characters are removed from the human part of the logical ID'(test: Test): void;
    'non-alphanumeric characters are removed even if the ID has only one component'(test: Test): void;
    'empty identifiers are not allowed'(test: Test): void;
    'too large identifiers are truncated yet still remain unique'(test: Test): void;
    'Refs and dependencies will correctly reflect renames done at the stack level'(test: Test): void;
    'customize logical id allocation behavior by overriding `Stack.allocateLogicalId`'(test: Test): void;
};
/**
 * These tests are executed once (for specific ID schemes)
 */
export = _default;
