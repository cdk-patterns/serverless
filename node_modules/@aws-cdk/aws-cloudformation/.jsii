{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-iam": "1.22.0",
    "@aws-cdk/aws-lambda": "1.22.0",
    "@aws-cdk/aws-s3": "1.22.0",
    "@aws-cdk/aws-sns": "1.22.0",
    "@aws-cdk/core": "1.22.0",
    "@aws-cdk/cx-api": "1.22.0"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    }
  },
  "description": "CDK Constructs for AWS CloudFormation",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "0.21.2 (build 4370756)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "cloudformation"
  ],
  "license": "Apache-2.0",
  "name": "@aws-cdk/aws-cloudformation",
  "readme": {
    "markdown": "## AWS CloudFormation Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Stability: Stable](https://img.shields.io/badge/stability-Stable-success.svg?style=for-the-badge)\n\n\n---\n<!--END STABILITY BANNER-->\n\nThis module is part of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) project.\n\n### Custom Resources\n\nCustom Resources are CloudFormation resources that are implemented by\narbitrary user code. They can do arbitrary lookups or modifications\nduring a CloudFormation synthesis run.\n\nYou will typically use Lambda to implement a Construct implemented as a\nCustom Resource (though SNS topics can be used as well). Your Lambda function\nwill be sent a `CREATE`, `UPDATE` or `DELETE` message, depending on the\nCloudFormation life cycle. It will perform whatever actions it needs to, and\nthen return any number of output values which will be available as attributes\nof your Construct. In turn, those can be used as input to other Constructs in\nyour model.\n\nIn general, consumers of your Construct will not need to care whether\nit is implemented in term of other CloudFormation resources or as a\ncustom resource.\n\nNote: when implementing your Custom Resource using a Lambda, use\na `SingletonLambda` so that even if your custom resource is instantiated\nmultiple times, the Lambda will only get uploaded once.\n\n#### Example\n\nThe following shows an example of a declaring Custom Resource that copies\nfiles into an S3 bucket during deployment (the implementation of the actual\nLambda handler is elided for brevity).\n\n```ts lit=test/example.customresource.lit.ts\ninterface CopyOperationProps {\n  sourceBucket: IBucket;\n  targetBucket: IBucket;\n}\n\nclass CopyOperation extends Construct {\n  constructor(parent: Construct, name: string, props: CopyOperationProps) {\n    super(parent, name);\n\n    const lambdaProvider = new lambda.SingletonFunction(this, 'Provider', {\n      uuid: 'f7d4f730-4ee1-11e8-9c2d-fa7ae01bbebc',\n      runtime: lambda.Runtime.PYTHON_3_7,\n      code: lambda.Code.fromAsset('../copy-handler'),\n      handler: 'index.handler',\n      timeout: Duration.seconds(60),\n    });\n\n    new CustomResource(this, 'Resource', {\n      provider: CustomResourceProvider.fromLambda(lambdaProvider),\n      properties: {\n        sourceBucketArn: props.sourceBucket.bucketArn,\n        targetBucketArn: props.targetBucket.bucketArn,\n      }\n    });\n  }\n}\n```\n\nThe [aws-cdk-examples repository](https://github.com/aws-samples/aws-cdk-examples) has\nexamples for adding custom resources.\n\n#### References\n\nSee the following section of the docs on details to write Custom Resources:\n\n* [Introduction](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources.html)\n* [Reference](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/crpg-ref.html)\n* [Code Reference](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html)\n\n### Nested Stacks\n\n[Nested stacks](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html) are stacks created as part of other stacks. You create a nested stack within another stack by using the `NestedStack` construct.\n\nAs your infrastructure grows, common patterns can emerge in which you declare the same components in multiple templates. You can separate out these common components and create dedicated templates for them. Then use the resource in your template to reference other templates, creating nested stacks.\n\nFor example, assume that you have a load balancer configuration that you use for most of your stacks. Instead of copying and pasting the same configurations into your templates, you can create a dedicated template for the load balancer. Then, you just use the resource to reference that template from within other templates.\n\nThe following example will define a single top-level stack that contains two nested stacks: each one with a single Amazon S3 bucket:\n\n```ts\nimport { Stack, Construct, StackProps } from '@aws-cdk/core';\nimport cfn = require('@aws-cdk/aws-cloudformation');\nimport s3 = require('@aws-cdk/aws-s3');\n\nclass MyNestedStack extends cfn.NestedStack {\n  constructor(scope: Construct, id: string, props?: cfn.NestedStackProps) {\n    super(scope, id, props);\n\n    new s3.Bucket(this, 'NestedBucket');\n  }\n}\n\nclass MyParentStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    new MyNestedStack(this, 'Nested1');\n    new MyNestedStack(this, 'Nested2');\n  }\n}\n```\n\nResources references across nested/parent boundaries (even with multiple levels of nesting) will be wired by the AWS CDK\nthrough CloudFormation parameters and outputs. When a resource from a parent stack is referenced by a nested stack,\na CloudFormation parameter will automatically be added to the nested stack and assigned from the parent; when a resource\nfrom a nested stack is referenced by a parent stack, a CloudFormation output will be automatically be added to the\nnested stack and referenced using `Fn::GetAtt \"Outputs.Xxx\"` from the parent.\n\nNested stacks also support the use of Docker image and file assets.\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-cloudformation",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "assemblyOriginatorKeyFile": "../../key.snk",
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.CloudFormation",
      "packageId": "Amazon.CDK.AWS.CloudFormation",
      "signAssembly": true
    },
    "java": {
      "maven": {
        "artifactId": "cloudformation",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.cloudformation"
    },
    "js": {
      "npm": "@aws-cdk/aws-cloudformation"
    },
    "python": {
      "distName": "aws-cdk.aws-cloudformation",
      "module": "aws_cdk.aws_cloudformation"
    }
  },
  "types": {
    "@aws-cdk/aws-cloudformation.CfnCustomResource": {
      "assembly": "@aws-cdk/aws-cloudformation",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::CustomResource"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::CustomResource`."
      },
      "fqn": "@aws-cdk/aws-cloudformation.CfnCustomResource",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::CustomResource`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudformation.CfnCustomResourceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 63
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 96
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 106
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCustomResource",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 67
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 101
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html#cfn-customresource-servicetoken",
            "stability": "external",
            "summary": "`AWS::CloudFormation::CustomResource.ServiceToken`."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 73
          },
          "name": "serviceToken",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudformation.CfnCustomResourceProps": {
      "assembly": "@aws-cdk/aws-cloudformation",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::CloudFormation::CustomResource`."
      },
      "fqn": "@aws-cdk/aws-cloudformation.CfnCustomResourceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 16
      },
      "name": "CfnCustomResourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html#cfn-customresource-servicetoken",
            "stability": "external",
            "summary": "`AWS::CloudFormation::CustomResource.ServiceToken`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 22
          },
          "name": "serviceToken",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudformation.CfnMacro": {
      "assembly": "@aws-cdk/aws-cloudformation",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::Macro"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::Macro`."
      },
      "fqn": "@aws-cdk/aws-cloudformation.CfnMacro",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::Macro`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudformation.CfnMacroProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 197
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 259
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 273
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnMacro",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 201
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 264
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-functionname",
            "stability": "external",
            "summary": "`AWS::CloudFormation::Macro.FunctionName`."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 207
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-name",
            "stability": "external",
            "summary": "`AWS::CloudFormation::Macro.Name`."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 213
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-description",
            "stability": "external",
            "summary": "`AWS::CloudFormation::Macro.Description`."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 219
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-loggroupname",
            "stability": "external",
            "summary": "`AWS::CloudFormation::Macro.LogGroupName`."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 225
          },
          "name": "logGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-logrolearn",
            "stability": "external",
            "summary": "`AWS::CloudFormation::Macro.LogRoleARN`."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 231
          },
          "name": "logRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudformation.CfnMacroProps": {
      "assembly": "@aws-cdk/aws-cloudformation",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::CloudFormation::Macro`."
      },
      "fqn": "@aws-cdk/aws-cloudformation.CfnMacroProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 117
      },
      "name": "CfnMacroProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-functionname",
            "stability": "external",
            "summary": "`AWS::CloudFormation::Macro.FunctionName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 123
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-name",
            "stability": "external",
            "summary": "`AWS::CloudFormation::Macro.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 129
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-description",
            "stability": "external",
            "summary": "`AWS::CloudFormation::Macro.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 135
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-loggroupname",
            "stability": "external",
            "summary": "`AWS::CloudFormation::Macro.LogGroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 141
          },
          "name": "logGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-logrolearn",
            "stability": "external",
            "summary": "`AWS::CloudFormation::Macro.LogRoleARN`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 147
          },
          "name": "logRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudformation.CfnStack": {
      "assembly": "@aws-cdk/aws-cloudformation",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::Stack"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::Stack`."
      },
      "fqn": "@aws-cdk/aws-cloudformation.CfnStack",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::Stack`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudformation.CfnStackProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 363
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 424
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 438
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnStack",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 367
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 429
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-tags",
            "stability": "external",
            "summary": "`AWS::CloudFormation::Stack.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 391
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-templateurl",
            "stability": "external",
            "summary": "`AWS::CloudFormation::Stack.TemplateURL`."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 373
          },
          "name": "templateUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-notificationarns",
            "stability": "external",
            "summary": "`AWS::CloudFormation::Stack.NotificationARNs`."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 379
          },
          "name": "notificationArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-parameters",
            "stability": "external",
            "summary": "`AWS::CloudFormation::Stack.Parameters`."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 385
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-timeoutinminutes",
            "stability": "external",
            "summary": "`AWS::CloudFormation::Stack.TimeoutInMinutes`."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 397
          },
          "name": "timeoutInMinutes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudformation.CfnStackProps": {
      "assembly": "@aws-cdk/aws-cloudformation",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::CloudFormation::Stack`."
      },
      "fqn": "@aws-cdk/aws-cloudformation.CfnStackProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 284
      },
      "name": "CfnStackProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-templateurl",
            "stability": "external",
            "summary": "`AWS::CloudFormation::Stack.TemplateURL`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 290
          },
          "name": "templateUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-notificationarns",
            "stability": "external",
            "summary": "`AWS::CloudFormation::Stack.NotificationARNs`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 296
          },
          "name": "notificationArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-parameters",
            "stability": "external",
            "summary": "`AWS::CloudFormation::Stack.Parameters`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 302
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-tags",
            "stability": "external",
            "summary": "`AWS::CloudFormation::Stack.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 308
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-timeoutinminutes",
            "stability": "external",
            "summary": "`AWS::CloudFormation::Stack.TimeoutInMinutes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 314
          },
          "name": "timeoutInMinutes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudformation.CfnWaitCondition": {
      "assembly": "@aws-cdk/aws-cloudformation",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::WaitCondition"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::WaitCondition`."
      },
      "fqn": "@aws-cdk/aws-cloudformation.CfnWaitCondition",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::WaitCondition`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudformation.CfnWaitConditionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 511
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 563
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 575
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnWaitCondition",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 515
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Data"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 520
          },
          "name": "attrData",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 568
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-count",
            "stability": "external",
            "summary": "`AWS::CloudFormation::WaitCondition.Count`."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 526
          },
          "name": "count",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-handle",
            "stability": "external",
            "summary": "`AWS::CloudFormation::WaitCondition.Handle`."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 532
          },
          "name": "handle",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-timeout",
            "stability": "external",
            "summary": "`AWS::CloudFormation::WaitCondition.Timeout`."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 538
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudformation.CfnWaitConditionHandle": {
      "assembly": "@aws-cdk/aws-cloudformation",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::WaitConditionHandle"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitconditionhandle.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::WaitConditionHandle`."
      },
      "fqn": "@aws-cdk/aws-cloudformation.CfnWaitConditionHandle",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::WaitConditionHandle`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 587
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 611
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        }
      ],
      "name": "CfnWaitConditionHandle",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 591
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudformation.CfnWaitConditionProps": {
      "assembly": "@aws-cdk/aws-cloudformation",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::CloudFormation::WaitCondition`."
      },
      "fqn": "@aws-cdk/aws-cloudformation.CfnWaitConditionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 449
      },
      "name": "CfnWaitConditionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-count",
            "stability": "external",
            "summary": "`AWS::CloudFormation::WaitCondition.Count`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 455
          },
          "name": "count",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-handle",
            "stability": "external",
            "summary": "`AWS::CloudFormation::WaitCondition.Handle`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 461
          },
          "name": "handle",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-timeout",
            "stability": "external",
            "summary": "`AWS::CloudFormation::WaitCondition.Timeout`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 467
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudformation.CloudFormationCapabilities": {
      "assembly": "@aws-cdk/aws-cloudformation",
      "docs": {
        "stability": "stable",
        "summary": "Capabilities that affect whether CloudFormation is allowed to change IAM resources."
      },
      "fqn": "@aws-cdk/aws-cloudformation.CloudFormationCapabilities",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/cloud-formation-capabilities.ts",
        "line": 4
      },
      "members": [
        {
          "docs": {
            "custom": {
              "link": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities"
            },
            "remarks": "Pass this capability if you wish to block the creation IAM resources.",
            "stability": "stable",
            "summary": "No IAM Capabilities."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "custom": {
              "link": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities"
            },
            "remarks": "Pass this capability if you're only creating anonymous resources.",
            "stability": "stable",
            "summary": "Capability to create anonymous IAM resources."
          },
          "name": "ANONYMOUS_IAM"
        },
        {
          "docs": {
            "custom": {
              "link": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities"
            },
            "remarks": "Pass this capability if you're creating IAM resources that have physical\nnames.\n\n`CloudFormationCapabilities.NamedIAM` implies `CloudFormationCapabilities.IAM`; you don't have to pass both.",
            "stability": "stable",
            "summary": "Capability to create named IAM resources."
          },
          "name": "NAMED_IAM"
        },
        {
          "docs": {
            "custom": {
              "link": "https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStack.html"
            },
            "remarks": "Pass this capability if your template includes macros, for example AWS::Include or AWS::Serverless.",
            "stability": "stable",
            "summary": "Capability to run CloudFormation macros."
          },
          "name": "AUTO_EXPAND"
        }
      ],
      "name": "CloudFormationCapabilities"
    },
    "@aws-cdk/aws-cloudformation.CustomResource": {
      "assembly": "@aws-cdk/aws-cloudformation",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "remarks": "As a custom resource author, you should be publishing a subclass of this class\nthat hides the choice of provider, and accepts a strongly-typed properties\nobject with the properties your provider accepts.",
        "stability": "stable",
        "summary": "Custom resource that is implemented using a Lambda."
      },
      "fqn": "@aws-cdk/aws-cloudformation.CustomResource",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudformation.CustomResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/custom-resource.ts",
        "line": 155
      },
      "methods": [
        {
          "docs": {
            "remarks": "Attributes are returned from the custom resource provider through the\n`Data` map where the key is the attribute name.",
            "returns": "a token for `Fn::GetAtt`. Use `Token.asXxx` to encode the returned `Reference` as a specific type or\nuse the convenience `getAttString` for string attributes.",
            "stability": "stable",
            "summary": "Returns the value of an attribute of the custom resource of an arbitrary type."
          },
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 192
          },
          "name": "getAtt",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the attribute."
              },
              "name": "attributeName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Reference"
            }
          }
        },
        {
          "docs": {
            "remarks": "Attributes are returned from the custom resource provider through the\n`Data` map where the key is the attribute name.",
            "returns": "a token for `Fn::GetAtt` encoded as a string.",
            "stability": "stable",
            "summary": "Returns the value of an attribute of the custom resource of type string."
          },
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 204
          },
          "name": "getAttString",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the attribute."
              },
              "name": "attributeName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "CustomResource",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The physical name of this custom resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 179
          },
          "name": "ref",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudformation.CustomResourceProps": {
      "assembly": "@aws-cdk/aws-cloudformation",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to provide a Lambda-backed custom resource."
      },
      "fqn": "@aws-cdk/aws-cloudformation.CustomResourceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/custom-resource.ts",
        "line": 79
      },
      "name": "CustomResourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "You can implement a provider by listening to raw AWS CloudFormation events\nthrough an SNS topic or an AWS Lambda function or use the CDK's custom\n[resource provider framework] which makes it easier to implement robust\nproviders.\n\n[resource provider framework]: https://docs.aws.amazon.com/cdk/api/latest/docs/custom-resources-readme.html\n\n```ts\n// use the provider framework from aws-cdk/custom-resources:\nprovider: new custom_resources.Provider({\n   onEventHandler: myOnEventLambda,\n   isCompleteHandler: myIsCompleteLambda, // optional\n});\n```\n\n```ts\n// invoke an AWS Lambda function when a lifecycle event occurs:\nprovider: CustomResourceProvider.fromLambda(myFunction)\n```\n\n```ts\n// publish lifecycle events to an SNS topic:\nprovider: CustomResourceProvider.fromTopic(myTopic)\n```",
            "stability": "stable",
            "summary": "The provider which implements the custom resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 108
          },
          "name": "provider",
          "type": {
            "fqn": "@aws-cdk/aws-cloudformation.ICustomResourceProvider"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No properties.",
            "stability": "stable",
            "summary": "Properties to pass to the Lambda."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 115
          },
          "name": "properties",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "cdk.RemovalPolicy.Destroy",
            "stability": "stable",
            "summary": "The policy to apply when this resource is removed from the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 145
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- AWS::CloudFormation::CustomResource",
            "remarks": "For example, you can use \"Custom::MyCustomResourceTypeName\".\n\nCustom resource type names must begin with \"Custom::\" and can include\nalphanumeric characters and the following characters: _@-. You can specify\na custom resource type name up to a maximum length of 60 characters. You\ncannot change the type during an update.\n\nUsing your own resource type names helps you quickly differentiate the\ntypes of custom resources in your stack. For example, if you had two custom\nresources that conduct two different ping tests, you could name their type\nas Custom::PingTester to make them easily identifiable as ping testers\n(instead of using AWS::CloudFormation::CustomResource).",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html#aws-cfn-resource-type-name",
            "stability": "stable",
            "summary": "For custom resources, you can specify AWS::CloudFormation::CustomResource (the default) as the resource type, or you can specify your own resource type name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 138
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudformation.CustomResourceProvider": {
      "assembly": "@aws-cdk/aws-cloudformation",
      "docs": {
        "stability": "stable",
        "summary": "Represents a provider for an AWS CloudFormation custom resources."
      },
      "fqn": "@aws-cdk/aws-cloudformation.CustomResourceProvider",
      "interfaces": [
        "@aws-cdk/aws-cloudformation.ICustomResourceProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/custom-resource.ts",
        "line": 37
      },
      "methods": [
        {
          "docs": {
            "remarks": "We recommend using a lambda.SingletonFunction for this.",
            "stability": "stable",
            "summary": "The Lambda provider that implements this custom resource."
          },
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 43
          },
          "name": "fromLambda",
          "parameters": [
            {
              "name": "handler",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.IFunction"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudformation.CustomResourceProvider"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The SNS Topic for the provider that implements this custom resource."
          },
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 50
          },
          "name": "fromTopic",
          "parameters": [
            {
              "name": "topic",
              "type": {
                "fqn": "@aws-cdk/aws-sns.ITopic"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudformation.CustomResourceProvider"
            }
          },
          "static": true
        },
        {
          "docs": {
            "deprecated": "use `fromLambda`",
            "stability": "deprecated",
            "summary": "Use AWS Lambda as a provider."
          },
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 58
          },
          "name": "lambda",
          "parameters": [
            {
              "name": "handler",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.IFunction"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudformation.CustomResourceProvider"
            }
          },
          "static": true
        },
        {
          "docs": {
            "deprecated": "use `fromTopic`",
            "stability": "deprecated",
            "summary": "Use an SNS topic as the provider."
          },
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 64
          },
          "name": "topic",
          "parameters": [
            {
              "name": "topic",
              "type": {
                "fqn": "@aws-cdk/aws-sns.ITopic"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudformation.CustomResourceProvider"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when this provider is used by a `CustomResource`."
          },
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 71
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-cloudformation.ICustomResourceProvider",
          "parameters": [
            {
              "name": "_",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudformation.CustomResourceProviderConfig"
            }
          }
        }
      ],
      "name": "CustomResourceProvider",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "the ServiceToken which contains the ARN for this provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 69
          },
          "name": "serviceToken",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudformation.CustomResourceProviderConfig": {
      "assembly": "@aws-cdk/aws-cloudformation",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration options for custom resource providers."
      },
      "fqn": "@aws-cdk/aws-cloudformation.CustomResourceProviderConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/custom-resource.ts",
        "line": 14
      },
      "name": "CustomResourceProviderConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the SNS topic or the AWS Lambda function which implements this provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 19
          },
          "name": "serviceToken",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudformation.ICustomResourceProvider": {
      "assembly": "@aws-cdk/aws-cloudformation",
      "docs": {
        "stability": "stable",
        "summary": "Represents a provider for an AWS CloudFormation custom resources."
      },
      "fqn": "@aws-cdk/aws-cloudformation.ICustomResourceProvider",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/custom-resource.ts",
        "line": 25
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "returns": "provider configuration",
            "stability": "stable",
            "summary": "Called when this provider is used by a `CustomResource`."
          },
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 31
          },
          "name": "bind",
          "parameters": [
            {
              "docs": {
                "summary": "The resource that uses this provider."
              },
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudformation.CustomResourceProviderConfig"
            }
          }
        }
      ],
      "name": "ICustomResourceProvider"
    },
    "@aws-cdk/aws-cloudformation.NestedStack": {
      "assembly": "@aws-cdk/aws-cloudformation",
      "base": "@aws-cdk/core.Stack",
      "docs": {
        "remarks": "When you apply template changes to update a top-level stack, CloudFormation\nupdates the top-level stack and initiates an update to its nested stacks.\nCloudFormation updates the resources of modified nested stacks, but does not\nupdate the resources of unmodified nested stacks.\n\nFurthermore, this stack will not be treated as an independent deployment\nartifact (won't be listed in \"cdk list\" or deployable through \"cdk deploy\"),\nbut rather only synthesized as a template and uploaded as an asset to S3.\n\nCross references of resource attributes between the parent stack and the\nnested stack will automatically be translated to stack parameters and\noutputs.",
        "stability": "experimental",
        "summary": "A CloudFormation nested stack."
      },
      "fqn": "@aws-cdk/aws-cloudformation.NestedStack",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudformation.NestedStackProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/nested-stack.ts",
        "line": 69
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Checks if `x` is an object of type `NestedStack`."
          },
          "locationInModule": {
            "filename": "lib/nested-stack.ts",
            "line": 74
          },
          "name": "isNestedStack",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Called by the base \"prepare\" method when a reference is found."
          },
          "locationInModule": {
            "filename": "lib/nested-stack.ts",
            "line": 149
          },
          "name": "prepareCrossReference",
          "overrides": "@aws-cdk/core.Stack",
          "parameters": [
            {
              "name": "sourceStack",
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            },
            {
              "name": "reference",
              "type": {
                "fqn": "@aws-cdk/core.Reference"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.IResolvable"
            }
          }
        }
      ],
      "name": "NestedStack",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "example": "\"arn:aws:cloudformation:us-east-2:123456789012:stack/mystack-mynestedstack-sggfrhxhum7w/f449b250-b969-11e0-a185-5081d0136786\"",
            "remarks": "This is a context aware attribute:\n- If this is referenced from the parent stack, it will return `{ \"Ref\": \"LogicalIdOfNestedStackResource\" }`.\n- If this is referenced from the context of the nested stack, it will return `{ \"Ref\": \"AWS::StackId\" }`",
            "stability": "experimental",
            "summary": "An attribute that represents the ID of the stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nested-stack.ts",
            "line": 142
          },
          "name": "stackId",
          "overrides": "@aws-cdk/core.Stack",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "example": "mystack-mynestedstack-sggfrhxhum7w",
            "remarks": "This is a context aware attribute:\n- If this is referenced from the parent stack, it will return a token that parses the name from the stack ID.\n- If this is referenced from the context of the nested stack, it will return `{ \"Ref\": \"AWS::StackName\" }`",
            "stability": "experimental",
            "summary": "An attribute that represents the name of the nested stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nested-stack.ts",
            "line": 128
          },
          "name": "stackName",
          "overrides": "@aws-cdk/core.Stack",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the CloudFormation template file emitted to the output directory during synthesis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nested-stack.ts",
            "line": 78
          },
          "name": "templateFile",
          "overrides": "@aws-cdk/core.Stack",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "`undefined` for top-level (non-nested) stacks.",
            "stability": "experimental",
            "summary": "If this is a nested stack, this represents its `AWS::CloudFormation::Stack` resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nested-stack.ts",
            "line": 79
          },
          "name": "nestedStackResource",
          "optional": true,
          "overrides": "@aws-cdk/core.Stack",
          "type": {
            "fqn": "@aws-cdk/core.CfnResource"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudformation.NestedStackProps": {
      "assembly": "@aws-cdk/aws-cloudformation",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Initialization props for the `NestedStack` construct."
      },
      "fqn": "@aws-cdk/aws-cloudformation.NestedStackProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nested-stack.ts",
        "line": 12
      },
      "name": "NestedStackProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- notifications are not sent for this stack.",
            "stability": "experimental",
            "summary": "The Simple Notification Service (SNS) topics to publish stack related events."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nested-stack.ts",
            "line": 48
          },
          "name": "notifications",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-sns.ITopic"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no user-defined parameters are passed to the nested stack",
            "remarks": "Each parameter has a name corresponding\nto a parameter defined in the embedded template and a value representing\nthe value that you want to set for the parameter.\n\nThe nested stack construct will automatically synthesize parameters in order\nto bind references from the parent stack(s) into the nested stack.",
            "stability": "experimental",
            "summary": "The set value pairs that represent the parameters passed to CloudFormation when this nested stack is created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nested-stack.ts",
            "line": 25
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no timeout",
            "remarks": "When CloudFormation detects that the nested stack has reached the\nCREATE_COMPLETE state, it marks the nested stack resource as\nCREATE_COMPLETE in the parent stack and resumes creating the parent stack.\nIf the timeout period expires before the nested stack reaches\nCREATE_COMPLETE, CloudFormation marks the nested stack as failed and rolls\nback both the nested stack and parent stack.",
            "stability": "experimental",
            "summary": "The length of time that CloudFormation waits for the nested stack to reach the CREATE_COMPLETE state."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nested-stack.ts",
            "line": 40
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ]
    }
  },
  "version": "1.22.0",
  "fingerprint": "mSxrwEqvjaArBlqk4KQrzeT4TRUZi9ZDDiHsmzfTe1s="
}
