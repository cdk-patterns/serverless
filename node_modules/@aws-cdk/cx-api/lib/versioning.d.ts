import { AssemblyManifest } from './cloud-assembly';
/**
 * Bump this to the library version if and only if the CX protocol changes.
 *
 * We could also have used 1, 2, 3, ... here to indicate protocol versions, but
 * those then still need to be mapped to software versions to be useful. So we
 * might as well use the software version as protocol version and immediately
 * generate a useful error message from this.
 *
 * Note that the versions are not compared in a semver way, they are used as
 * opaque ordered tokens.
 */
export declare const CLOUD_ASSEMBLY_VERSION = "1.21.0";
/**
 * Look at the type of response we get and upgrade it to the latest expected version
 */
export declare function verifyManifestVersion(manifetVersion: string): void;
/**
 * Upgrade old manifest versions to later manifest version here (if possible).
 *
 * Use this to make the toolkit recognize old assembly versions. This function should
 * add newly required fields with appropriate default values, etc.
 */
export declare function upgradeAssemblyManifest(manifest: AssemblyManifest): AssemblyManifest;
