Resources:
  Vpc8378EB38:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: TheRdsProxyStack/Vpc
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/Resource
  VpcPublicSubnet1Subnet5C2D37C4:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: TheRdsProxyStack/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/PublicSubnet1/Subnet
  VpcPublicSubnet1RouteTable6C95E38E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: TheRdsProxyStack/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/PublicSubnet1/RouteTable
  VpcPublicSubnet1RouteTableAssociation97140677:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet1RouteTable6C95E38E
      SubnetId:
        Ref: VpcPublicSubnet1Subnet5C2D37C4
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/PublicSubnet1/RouteTableAssociation
  VpcPublicSubnet1DefaultRoute3DA9E72A:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet1RouteTable6C95E38E
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/PublicSubnet1/DefaultRoute
  VpcPublicSubnet1EIPD7E02669:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: TheRdsProxyStack/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/PublicSubnet1/EIP
  VpcPublicSubnet1NATGateway4D7517AA:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - VpcPublicSubnet1EIPD7E02669
          - AllocationId
      SubnetId:
        Ref: VpcPublicSubnet1Subnet5C2D37C4
      Tags:
        - Key: Name
          Value: TheRdsProxyStack/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/PublicSubnet1/NATGateway
  VpcPublicSubnet2Subnet691E08A3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: TheRdsProxyStack/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/PublicSubnet2/Subnet
  VpcPublicSubnet2RouteTable94F7E489:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: TheRdsProxyStack/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/PublicSubnet2/RouteTable
  VpcPublicSubnet2RouteTableAssociationDD5762D8:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet2RouteTable94F7E489
      SubnetId:
        Ref: VpcPublicSubnet2Subnet691E08A3
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/PublicSubnet2/RouteTableAssociation
  VpcPublicSubnet2DefaultRoute97F91067:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet2RouteTable94F7E489
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/PublicSubnet2/DefaultRoute
  VpcPublicSubnet2EIP3C605A87:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: TheRdsProxyStack/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/PublicSubnet2/EIP
  VpcPublicSubnet2NATGateway9182C01D:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - VpcPublicSubnet2EIP3C605A87
          - AllocationId
      SubnetId:
        Ref: VpcPublicSubnet2Subnet691E08A3
      Tags:
        - Key: Name
          Value: TheRdsProxyStack/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/PublicSubnet2/NATGateway
  VpcPrivateSubnet1Subnet536B997A:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: TheRdsProxyStack/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/PrivateSubnet1/Subnet
  VpcPrivateSubnet1RouteTableB2C5B500:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: TheRdsProxyStack/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/PrivateSubnet1/RouteTable
  VpcPrivateSubnet1RouteTableAssociation70C59FA6:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet1RouteTableB2C5B500
      SubnetId:
        Ref: VpcPrivateSubnet1Subnet536B997A
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/PrivateSubnet1/RouteTableAssociation
  VpcPrivateSubnet1DefaultRouteBE02A9ED:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet1RouteTableB2C5B500
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VpcPublicSubnet1NATGateway4D7517AA
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/PrivateSubnet1/DefaultRoute
  VpcPrivateSubnet2Subnet3788AAA1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: TheRdsProxyStack/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/PrivateSubnet2/Subnet
  VpcPrivateSubnet2RouteTableA678073B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: TheRdsProxyStack/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/PrivateSubnet2/RouteTable
  VpcPrivateSubnet2RouteTableAssociationA89CAD56:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet2RouteTableA678073B
      SubnetId:
        Ref: VpcPrivateSubnet2Subnet3788AAA1
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/PrivateSubnet2/RouteTableAssociation
  VpcPrivateSubnet2DefaultRoute060D2087:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet2RouteTableA678073B
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VpcPublicSubnet2NATGateway9182C01D
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/PrivateSubnet2/DefaultRoute
  VpcIGWD7BA715C:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: TheRdsProxyStack/Vpc
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/IGW
  VpcVPCGWBF912B6E:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      InternetGatewayId:
        Ref: VpcIGWD7BA715C
    Metadata:
      aws:cdk:path: TheRdsProxyStack/Vpc/VPCGW
  secret4DA88516:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString: {}
    Metadata:
      aws:cdk:path: TheRdsProxyStack/secret/Resource
  DBCredentialsSecretAFB45EA2:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludePunctuation: true
        GenerateStringKey: password
        IncludeSpace: false
        SecretStringTemplate: '{"username":"syscdk"}'
      Name: rds-credentials
    Metadata:
      aws:cdk:path: TheRdsProxyStack/DBCredentialsSecret/Resource
  DBCredentialsArn15122902:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value:
        Ref: DBCredentialsSecretAFB45EA2
      Name: rds-credentials-arn
    Metadata:
      aws:cdk:path: TheRdsProxyStack/DBCredentialsArn/Resource
  DBInstanceSubnetGroupF597B45B:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for DBInstance database
      SubnetIds:
        - Ref: VpcPrivateSubnet1Subnet536B997A
        - Ref: VpcPrivateSubnet2Subnet3788AAA1
    Metadata:
      aws:cdk:path: TheRdsProxyStack/DBInstance/SubnetGroup
  DBInstanceSecurityGroup8BE42C36:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for DBInstance database
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: TheRdsProxyStack/DBInstance/SecurityGroup/Resource
  DBInstance46641A50:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t2.small
      AllocatedStorage: "100"
      CopyTagsToSnapshot: true
      DBSubnetGroupName:
        Ref: DBInstanceSubnetGroupF597B45B
      DeletionProtection: false
      Engine: mysql
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: DBCredentialsSecretAFB45EA2
            - :SecretString:username::}}
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: DBCredentialsSecretAFB45EA2
            - :SecretString:password::}}
      StorageType: gp2
      VPCSecurityGroups:
        - Fn::GetAtt:
            - DBInstanceSecurityGroup8BE42C36
            - GroupId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: TheRdsProxyStack/DBInstance/Resource
  DBInstanceproxyIAMRoleA34F77C0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: rds.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: TheRdsProxyStack/DBInstance/proxy/IAMRole/Resource
  DBInstanceproxyIAMRoleDefaultPolicyE8CB206F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: DBCredentialsSecretAFB45EA2
        Version: "2012-10-17"
      PolicyName: DBInstanceproxyIAMRoleDefaultPolicyE8CB206F
      Roles:
        - Ref: DBInstanceproxyIAMRoleA34F77C0
    Metadata:
      aws:cdk:path: TheRdsProxyStack/DBInstance/proxy/IAMRole/DefaultPolicy/Resource
  DBInstanceproxy9DDB3EFA:
    Type: AWS::RDS::DBProxy
    Properties:
      Auth:
        - AuthScheme: SECRETS
          IAMAuth: DISABLED
          SecretArn:
            Ref: DBCredentialsSecretAFB45EA2
      DBProxyName: proxy
      EngineFamily: MYSQL
      RoleArn:
        Fn::GetAtt:
          - DBInstanceproxyIAMRoleA34F77C0
          - Arn
      VpcSubnetIds:
        - Ref: VpcPrivateSubnet1Subnet536B997A
        - Ref: VpcPrivateSubnet2Subnet3788AAA1
      RequireTLS: true
    Metadata:
      aws:cdk:path: TheRdsProxyStack/DBInstance/proxy/Resource
  DBInstanceproxyProxyTargetGroup1EA2AF4F:
    Type: AWS::RDS::DBProxyTargetGroup
    Properties:
      DBProxyName:
        Ref: DBInstanceproxy9DDB3EFA
      ConnectionPoolConfigurationInfo: {}
      DBInstanceIdentifiers:
        - Ref: DBInstance46641A50
      TargetGroupName: default
    Metadata:
      aws:cdk:path: TheRdsProxyStack/DBInstance/proxy/ProxyTargetGroup
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.49.1,@aws-cdk/assets=1.49.1,@aws-cdk/aws-cloudwatch=1.49.1,@aws-cdk/aws-ec2=1.49.1,@aws-cdk/aws-events=1.49.1,@aws-cdk/aws-iam=1.49.1,@aws-cdk/aws-kms=1.49.1,@aws-cdk/aws-lambda=1.49.1,@aws-cdk/aws-logs=1.49.1,@aws-cdk/aws-rds=1.49.1,@aws-cdk/aws-s3=1.49.1,@aws-cdk/aws-s3-assets=1.49.1,@aws-cdk/aws-sam=1.49.1,@aws-cdk/aws-secretsmanager=1.49.1,@aws-cdk/aws-sqs=1.49.1,@aws-cdk/aws-ssm=1.49.1,@aws-cdk/cloud-assembly-schema=1.49.1,@aws-cdk/core=1.49.1,@aws-cdk/cx-api=1.49.1,@aws-cdk/region-info=1.49.1,jsii-runtime=node.js/v10.20.1
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

